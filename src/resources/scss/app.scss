// Fonts
@import url("https://fonts.googleapis.com/css?family=Nunito");
@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap");

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "~/bootstrap-scss/functions";

// 2. Include any default variable overrides here
$font-family-sans-serif: "Nunito", sans-serif;
$font-size-base: 0.9rem;
$line-height-base: 1.6;

// 3. Include remainder of required Bootstrap stylesheets
@import "~/bootstrap-scss/variables";
@import "~/bootstrap-scss/variables-dark.scss";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "~/bootstrap-scss/maps";
@import "~/bootstrap-scss/mixins";
@import "~/bootstrap-scss/root";

// 6. Optionally include any other parts as needed
@import "~/bootstrap-scss/card";
@import "~/bootstrap-scss/utilities";
@import "~/bootstrap-scss/reboot";
@import "~/bootstrap-scss/type";
@import "~/bootstrap-scss/images";
@import "~/bootstrap-scss/forms";
@import "~/bootstrap-scss/containers";
@import "~/bootstrap-scss/grid";
@import "~/bootstrap-scss/nav";
@import "~/bootstrap-scss/buttons";
@import "~/bootstrap-scss/helpers";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "~/bootstrap-scss/utilities/api";

// 8. Add additional custom code here


$theme-colors-button-subtle : map-merge($theme-colors, ("body": $body-bg,
		"body-tertiary": $body-tertiary-bg,
		"body-secondary": $body-secondary-bg,
	));

$theme-colors-button-subtle-dark : map-merge($theme-colors, ("body": $body-bg-dark,
		"body-tertiary": $body-tertiary-bg-dark,
		"body-secondary": $body-secondary-bg-dark,
	));

:root,
[data-bs-theme="light"] {

	@each $color, $value in $theme-colors-bg-subtle {
		.btn-#{$color}-subtle {
			@include button-variant($value, $value);
		}
	}

	@each $color, $value in $theme-colors {
		.btn-outline-#{$color}-subtle {
			@include button-outline-variant(shade-color($value, 10%));
		}
	}
}

@if $enable-dark-mode {
	@include color-mode(dark, true) {
		color-scheme: dark;

		@each $color, $value in $theme-colors {
			.btn-#{$color}-subtle {
				$button-bg-dark: shade-color($value, 60%);
				$button-border-dark: shade-color($value, 40%);
				$button-bg-active-dark: tint-color($button-bg-dark, 15%);
				$button-border-active-dark: tint-color($button-bg-dark, 5%);
				@include button-variant($background: $button-bg-dark,
					$border: $button-border-dark,
					$hover-background: $button-bg-active-dark,
					$hover-border: $button-border-active-dark,
					$active-background: $button-bg-active-dark,
					$active-border: $button-border-active-dark,
				);
			}
		}

		@each $color, $value in $theme-colors {
			.btn-outline-#{$color}-subtle {
				@include button-outline-variant(tint-color($value, 10%));
			}
		}
	}

}





$bootstrap-icons-font-src: url("~/bootstrap-icons/font/fonts/bootstrap-icons.woff2") format("woff2"),
	url("~/bootstrap-icons/font/fonts/bootstrap-icons.woff") format("woff"
	);

@import "~/bootstrap-icons/font/bootstrap-icons";

a {
	text-decoration: none;
}